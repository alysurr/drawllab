{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/Capstone/drawllab/src/components/ColorPicker/ColorPicker.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect, useRef, useMemo } from 'react';\nimport { Movable } from 'webrix/components';\nimport { useDimensions } from 'webrix/hooks';\nimport './ColorPicker.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WIDTH = 250;\nconst {\n  transform,\n  trackpad,\n  update\n} = Movable.Operations;\nconst {\n  clamp\n} = Movable.Transformers; // converts component to hex code \n\nconst componentToHex = c => {\n  const hex = c.toString(16);\n  return hex.length === 1 ? '0' + hex : hex;\n}; // converts rbg to hex code\n\n\nconst rgbToHex = (r, g, b) => '#' + componentToHex(r) + componentToHex(g) + componentToHex(b);\n\nconst GradientCanvas = ({\n  ctx,\n  height,\n  gradients\n}) => {\n  _s();\n\n  useEffect(() => {\n    gradients.forEach(([orientation, gradient]) => {\n      const grd = ctx.current.createLinearGradient(...orientation);\n      gradient.forEach(([color, offset]) => grd.addColorStop(offset, color));\n      ctx.current.fillStyle = grd;\n      ctx.current.fillRect(0, 0, WIDTH, height);\n    });\n  }, [gradients, ctx, height]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: node => {\n      ctx.current = node === null || node === void 0 ? void 0 : node.getContext('2d');\n    },\n    width: WIDTH,\n    height: height\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GradientCanvas, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = GradientCanvas;\n\nconst HueSelector = ({\n  onChange\n}) => {\n  _s2();\n\n  const movable = useRef();\n  const ctx = useRef();\n  const {\n    width\n  } = useDimensions(movable);\n  const [left, setLeft] = useState(0);\n  const props = Movable.useMove(useMemo(() => [trackpad(movable), transform(v => v.left, clamp(0, width - 1)), update(next => {\n    onChange(ctx.current.getImageData(next, 0, 1, 1).data.slice(0, 3));\n    setLeft(next);\n  })], [onChange, setLeft, width]));\n  return /*#__PURE__*/_jsxDEV(Movable, {\n    className: \"hue-selector\",\n    ref: movable,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer\",\n      style: {\n        left\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GradientCanvas, {\n      ctx: ctx,\n      height: 8,\n      gradients: useMemo(() => [[[0, 0, WIDTH, 0], [['red', 0.01], ['#ff0', 0.166], ['lime', 0.333], ['cyan', 0.5], ['blue', 0.666], ['#f0f', 0.833], ['red', 0.99]]]], [])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(HueSelector, \"nUCVkoFKYxHHFG6/94u1gUmv4Mo=\", false, function () {\n  return [useDimensions, Movable.useMove];\n});\n\n_c2 = HueSelector;\n\nconst ShadeSelector = ({\n  onChange,\n  hue\n}) => {\n  _s3();\n\n  const movable = useRef();\n  const ctx = useRef();\n  const {\n    width,\n    height\n  } = useDimensions(movable);\n  const hex = rgbToHex(...hue);\n  const [{\n    top,\n    left\n  }, setPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const props = Movable.useMove(useMemo(() => [trackpad(movable), transform(({\n    top,\n    left\n  }) => ({\n    top: clamp(0, height)(top),\n    left: clamp(0, width - 1)(left)\n  })), update(({\n    top,\n    left\n  }) => {\n    onChange(ctx.current.getImageData(left, top, 1, 1).data.slice(0, 3));\n    setPosition({\n      top,\n      left\n    });\n  })], [onChange, setPosition, width, height])); // Update the shade when the hue changes\n\n  useEffect(() => onChange(ctx.current.getImageData(left, top, 1, 1).data.slice(0, 3)), [hue, left, top, onChange]);\n  return /*#__PURE__*/_jsxDEV(Movable, {\n    className: \"shade-selector\",\n    ref: movable,\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pointer\",\n      style: {\n        top,\n        left\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GradientCanvas, {\n      ctx: ctx,\n      height: 250,\n      gradients: useMemo(() => [[[0, 0, WIDTH, 0], [[hex, 0], [hex, 1]]], [[0, 0, WIDTH, 0], [['white', 0.01], ['rgba(255, 255, 255, 0)', 0.99]]], [[0, 0, 0, WIDTH], [['rgba(0, 0, 0, 0)', 0.01], ['black', 0.99]]]], [hex])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s3(ShadeSelector, \"oGHfi0I6fm3VEgPJ10UeN76V8e8=\", false, function () {\n  return [useDimensions, Movable.useMove];\n});\n\n_c3 = ShadeSelector;\n\nconst InfoBox = ({\n  rgb\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"info-box\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hex\",\n    title: \"Hex\",\n    children: rgbToHex(...rgb)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rgb\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rgb__each\",\n      title: \"R\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: rgb[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rgb__each\",\n      title: \"G\",\n      children: rgb[1]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rgb__each\",\n      title: \"B\",\n      children: rgb[2]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 103,\n  columnNumber: 5\n}, this);\n\n_c4 = InfoBox;\nexport default _s4(() => {\n  _s4();\n\n  const [{\n    shade,\n    hue\n  }, update] = useState({\n    hue: [255, 0, 0],\n    shade: [0, 0, 0]\n  });\n  const updateHue = useCallback(hue => update(c => ({ ...c,\n    hue\n  })), [update]);\n  const updateShade = useCallback(shade => update(c => ({ ...c,\n    shade\n  })), [update]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"color-picker\",\n    children: [/*#__PURE__*/_jsxDEV(ShadeSelector, {\n      hue: hue,\n      onChange: updateShade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HueSelector, {\n      onChange: updateHue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InfoBox, {\n      rgb: shade\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}, \"JzqN4trLM+A+GC9OBr9REvw7Bo8=\");\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"GradientCanvas\");\n$RefreshReg$(_c2, \"HueSelector\");\n$RefreshReg$(_c3, \"ShadeSelector\");\n$RefreshReg$(_c4, \"InfoBox\");","map":{"version":3,"sources":["/Users/alysurr/Documents/Capstone/drawllab/src/components/ColorPicker/ColorPicker.jsx"],"names":["React","useCallback","useState","useEffect","useRef","useMemo","Movable","useDimensions","WIDTH","transform","trackpad","update","Operations","clamp","Transformers","componentToHex","c","hex","toString","length","rgbToHex","r","g","b","GradientCanvas","ctx","height","gradients","forEach","orientation","gradient","grd","current","createLinearGradient","color","offset","addColorStop","fillStyle","fillRect","node","getContext","HueSelector","onChange","movable","width","left","setLeft","props","useMove","v","next","getImageData","data","slice","ShadeSelector","hue","top","setPosition","InfoBox","rgb","shade","updateHue","updateShade"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect, useRef, useMemo } from 'react';\nimport { Movable } from 'webrix/components';\nimport { useDimensions } from 'webrix/hooks';\nimport './ColorPicker.scss';\n\nconst WIDTH = 250;\nconst {transform, trackpad, update} = Movable.Operations;\nconst {clamp} = Movable.Transformers;\n\n// converts component to hex code \n\nconst componentToHex = c => {\n    const hex = c.toString(16);\n    return hex.length === 1 ? '0' + hex : hex;\n};\n\n// converts rbg to hex code\nconst rgbToHex = (r, g, b) => (\n    '#' + componentToHex(r) + componentToHex(g) + componentToHex(b)\n);\n\nconst GradientCanvas = ({ctx, height, gradients}) => {\n\n    useEffect(() => {\n        gradients.forEach(([orientation, gradient]) => {\n            const grd = ctx.current.createLinearGradient(...orientation);\n            gradient.forEach(([color, offset]) => (\n                grd.addColorStop(offset, color)\n            ));\n            ctx.current.fillStyle = grd;\n            ctx.current.fillRect(0, 0, WIDTH, height);\n        });\n    }, [gradients, ctx, height]);\n\n    return (\n        <canvas ref={node => {ctx.current = node?.getContext('2d')}} width={WIDTH} height={height}/>\n    )\n};\n\nconst HueSelector = ({onChange}) => {\n    const movable = useRef();\n    const ctx = useRef();\n    const {width} = useDimensions(movable);\n    const [left, setLeft] = useState(0);\n\n    const props = Movable.useMove(useMemo(() => [\n        trackpad(movable),\n        transform(v => v.left, clamp(0, width - 1)),\n        update(next => {\n            onChange(ctx.current.getImageData(next, 0, 1, 1).data.slice(0, 3));\n            setLeft(next);\n        }),\n    ], [onChange, setLeft, width]));\n\n    return (\n        <Movable className='hue-selector' ref={movable} {...props}>\n            <div className='pointer' style={{left}}/>\n            <GradientCanvas ctx={ctx} height={8} gradients={useMemo(() => [\n                [\n                    [0, 0, WIDTH, 0],\n                    [['red', 0.01], ['#ff0', 0.166], ['lime', 0.333], ['cyan', 0.5], ['blue', 0.666], ['#f0f', 0.833], ['red', 0.99]],\n                ],\n            ], [])}/>\n        </Movable>\n    );\n}\n\nconst ShadeSelector = ({onChange, hue}) => {\n    const movable = useRef();\n    const ctx = useRef();\n    const {width, height} = useDimensions(movable);\n    const hex = rgbToHex(...hue);\n    const [{top, left}, setPosition] = useState({top: 0, left: 0});\n\n    const props = Movable.useMove(useMemo(() => [\n        trackpad(movable),\n        transform(({top, left}) => ({\n            top: clamp(0, height)(top),\n            left: clamp(0, width - 1)(left),\n        })),\n        update(({top, left}) => {\n            onChange(ctx.current.getImageData(left, top, 1, 1).data.slice(0, 3));\n            setPosition({top, left});\n        }),\n    ], [onChange, setPosition, width, height]));\n\n    // Update the shade when the hue changes\n    useEffect(() => onChange(ctx.current.getImageData(left, top, 1, 1).data.slice(0, 3)), [hue, left, top, onChange])\n\n    return (\n        <Movable className='shade-selector' ref={movable} {...props}>\n            <div className='pointer' style={{top, left}}/>\n            <GradientCanvas ctx={ctx} height={250} gradients={useMemo(() => [\n                [[0, 0, WIDTH, 0], [[hex, 0], [hex, 1]]],\n                [[0, 0, WIDTH, 0], [['white', 0.01], ['rgba(255, 255, 255, 0)', 0.99]]],\n                [[0, 0, 0, WIDTH], [['rgba(0, 0, 0, 0)', 0.01], ['black', 0.99]]],\n            ], [hex])}/>\n        </Movable>\n    );\n};\n\nconst InfoBox = ({rgb}) => (\n    <div className='info-box'>\n        <div className=\"hex\" title='Hex'>{rgbToHex(...rgb)}</div>\n        <div className=\"rgb\">\n            <div className=\"rgb__each\" title='R'><p>{rgb[0]}</p></div>\n            <div className=\"rgb__each\" title='G'>{rgb[1]}</div>\n            <div className=\"rgb__each\" title='B'>{rgb[2]}</div>\n        </div>\n    </div>\n);\n\nexport default () => {\n    const [{shade, hue}, update] = useState({hue: [255,0,0], shade: [0,0,0]});\n    const updateHue = useCallback(hue => update(c => ({...c, hue})), [update]);\n    const updateShade = useCallback(shade => update(c => ({...c, shade})), [update]);\n    return (\n        <div className='color-picker'>\n            <ShadeSelector hue={hue} onChange={updateShade}/>\n            <HueSelector onChange={updateHue}/>\n            <InfoBox rgb={shade}/>\n        </div>\n    );\n};"]},"metadata":{},"sourceType":"module"}