{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/Capstone/drawllab/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [elements, setElements] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const roughCanvas = rough.canvas(canvas);\n    elements.forEach(({\n      roughElement\n    }) => roughCanvas.draw(roughElement));\n  }, [elements]);\n\n  const handleMouseDown = e => {\n    setDrawing(true);\n    const {\n      clientX,\n      clientY\n    } = e;\n    const element = createElement(clientX, clientY, clientX, clientY);\n    setElements(prevState => [...prevState, element]);\n  };\n\n  const handleMouseMove = e => {\n    if (!drawing) return;\n    const {\n      clientX,\n      clientY\n    } = e;\n    const index = elements.length - 1;\n    const {\n      x1,\n      y1\n    } = elements[index];\n    const updatedElement = createElement(x1, y1, clientX, clientY);\n    const elementsCopy = [...elements];\n    elementsCopy[index] = updatedElement;\n    setElements(elementsCopy);\n  };\n\n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: \"Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"mbMMSqgIjKhznJ1tKJ3eI9cj7vs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alysurr/Documents/Capstone/drawllab/src/App.js"],"names":["App","elements","setElements","useState","drawing","setDrawing","useLayoutEffect","canvas","document","getElementById","context","getContext","clearRect","width","height","roughCanvas","rough","forEach","roughElement","draw","handleMouseDown","e","clientX","clientY","element","createElement","prevState","handleMouseMove","index","length","x1","y1","updatedElement","elementsCopy","handleMouseUp","window","innerWidth","innerHeight"],"mappings":";;;AAAA,OAAO,YAAP;;;;AAEA,MAAMA,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAAtC;AAEAG,EAAAA,eAAe,CAAC,MAAM;AACpB,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMC,OAAO,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAhB;AACAD,IAAAA,OAAO,CAACE,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwBL,MAAM,CAACM,KAA/B,EAAsCN,MAAM,CAACO,MAA7C;AAEA,UAAMC,WAAW,GAAGC,KAAK,CAACT,MAAN,CAAaA,MAAb,CAApB;AAEAN,IAAAA,QAAQ,CAACgB,OAAT,CAAiB,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAoBH,WAAW,CAACI,IAAZ,CAAiBD,YAAjB,CAArC;AACD,GARc,EAQZ,CAACjB,QAAD,CARY,CAAf;;AAUA,QAAMmB,eAAe,GAAIC,CAAD,IAAO;AAC7BhB,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,UAAM;AAAEiB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBF,CAA7B;AAEA,UAAMG,OAAO,GAAGC,aAAa,CAACH,OAAD,EAAUC,OAAV,EAAmBD,OAAnB,EAA4BC,OAA5B,CAA7B;AACArB,IAAAA,WAAW,CAAEwB,SAAD,IAAe,CAAC,GAAGA,SAAJ,EAAeF,OAAf,CAAhB,CAAX;AACD,GAPD;;AASA,QAAMG,eAAe,GAAIN,CAAD,IAAO;AAC7B,QAAI,CAACjB,OAAL,EAAc;AAEd,UAAM;AAAEkB,MAAAA,OAAF;AAAWC,MAAAA;AAAX,QAAuBF,CAA7B;AACA,UAAMO,KAAK,GAAG3B,QAAQ,CAAC4B,MAAT,GAAkB,CAAhC;AACA,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAa9B,QAAQ,CAAC2B,KAAD,CAA3B;AACA,UAAMI,cAAc,GAAGP,aAAa,CAACK,EAAD,EAAKC,EAAL,EAAST,OAAT,EAAkBC,OAAlB,CAApC;AAEA,UAAMU,YAAY,GAAG,CAAC,GAAGhC,QAAJ,CAArB;AACAgC,IAAAA,YAAY,CAACL,KAAD,CAAZ,GAAsBI,cAAtB;AACA9B,IAAAA,WAAW,CAAC+B,YAAD,CAAX;AACD,GAXD;;AAaA,QAAMC,aAAa,GAAG,MAAM;AAC1B7B,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,2BAEE;AACE,MAAA,EAAE,EAAC,QADL;AAEE,MAAA,KAAK,EAAE8B,MAAM,CAACC,UAFhB;AAGE,MAAA,MAAM,EAAED,MAAM,CAACE,WAHjB;AAIE,MAAA,WAAW,EAAEjB,eAJf;AAKE,MAAA,WAAW,EAAEO,eALf;AAME,MAAA,SAAS,EAAEO,aANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF,mBADF;AAeD,CAxDD;;GAAMlC,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import './App.scss';\n\nconst App = () => {\n\n  const [elements, setElements] = useState([]);\n  const [drawing, setDrawing] = useState(false);\n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    const roughCanvas = rough.canvas(canvas);\n\n    elements.forEach(({roughElement}) => roughCanvas.draw(roughElement));\n  }, [elements]);\n  \n  const handleMouseDown = (e) => {\n    setDrawing(true);\n\n    const { clientX, clientY } = e;\n\n    const element = createElement(clientX, clientY, clientX, clientY);\n    setElements((prevState) => [...prevState, element]);\n  };\n  \n  const handleMouseMove = (e) => {\n    if (!drawing) return;\n    \n    const { clientX, clientY } = e;\n    const index = elements.length - 1;\n    const { x1, y1 } = elements[index];\n    const updatedElement = createElement(x1, y1, clientX, clientY);\n\n    const elementsCopy = [...elements];\n    elementsCopy[index] = updatedElement;\n    setElements(elementsCopy);\n  };\n  \n  const handleMouseUp = () => {\n    setDrawing(false);\n  };\n\n  return (\n    <>\n\n      <canvas\n        id=\"canvas\"\n        width={window.innerWidth}\n        height={window.innerHeight}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        Canvas\n      </canvas>\n    </>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}