{"ast":null,"code":"var _jsxFileName = \"/Users/alysurr/Documents/Capstone/drawllab/src/pages/CanvasPage/CanvasPage.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './CanvasPage.scss';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport rough from 'roughjs/bundled/rough.esm';\nimport tippy from 'tippy.js';\nimport { getStroke } from 'perfect-freehand';\nimport { CirclePicker } from 'react-color'; // -----------------------------\n// ----- icons for toolbar -----\n// -----------------------------\n\nimport paintbrush from \"../../assets/images/paintbrush.svg\";\nimport line from \"../../assets/images/draw-line.svg\";\nimport square from \"../../assets/images/rectangle.svg\";\nimport select from \"../../assets/images/select.svg\";\nimport home from '../../assets/images/home.png';\nimport about from '../../assets/images/about.png';\nimport deleteicon from '../../assets/images/delete.png';\nimport colorpickicon from \"../../assets/images/color-picker.svg\";\nimport undoIcon from \"../../assets/images/undo.svg\";\nimport redoIcon from \"../../assets/images/redo.svg\"; // ---------------------------------------------\n// ---------- Functionality for Tools ----------\n// ---------------------------------------------\n// ------------- Element Creation --------------\n// ---------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst generator = rough.generator();\n\nconst createElement = (id, x1, y1, x2, y2, type) => {\n  switch (type) {\n    case \"line\":\n    case \"rectangle\":\n      const roughElement = type === \"line\" ? generator.line(x1, y1, x2, y2, {\n        bowing: 2,\n        strokeWidth: 2.5\n      }) : generator.rectangle(x1, y1, x2 - x1, y2 - y1, {\n        bowing: 2,\n        strokeWidth: 2.5\n      });\n      return {\n        id,\n        x1,\n        y1,\n        x2,\n        y2,\n        type,\n        roughElement\n      };\n\n    case \"paintbrush\":\n      return {\n        id,\n        type,\n        points: [{\n          x: x1,\n          y: y1\n        }]\n      };\n\n    default:\n      throw new Error(`unrecognized: ${type}`);\n  }\n};\n\nconst getSvgPathFromStroke = stroke => {\n  if (!stroke.length) return \"\";\n  const d = stroke.reduce((acc, [x0, y0], i, arr) => {\n    const [x1, y1] = arr[(i + 1) % arr.length];\n    acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n    return acc;\n  }, [\"M\", ...stroke[0], \"Q\"]);\n  d.push(\"Z\");\n  return d.join(\" \");\n};\n\nconst drawElement = (roughCanvas, context, element) => {\n  switch (element.type) {\n    case \"line\":\n    case \"rectangle\":\n      roughCanvas.draw(element.roughElement);\n      break;\n\n    case \"paintbrush\":\n      const stroke = getSvgPathFromStroke(getStroke(element.points, {\n        size: 8,\n        thinning: 0.5,\n        smoothing: 0.5,\n        streamline: 0.5,\n        strokeColor: '#666666'\n      }));\n      context.fill(new Path2D(stroke));\n      break;\n\n    default:\n      throw new Error(`unrecognised: ${element.type}`);\n  }\n}; // --------------------------------------------------------\n// ----- Functions to find Position for Select/Resize -----\n// --------------------------------------------------------\n\n\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\n\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\n  const a = {\n    x: x1,\n    y: y1\n  };\n  const b = {\n    x: x2,\n    y: y2\n  };\n  const c = {\n    x,\n    y\n  };\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\n};\n\nconst positionInElement = (x, y, element) => {\n  const {\n    type,\n    x1,\n    x2,\n    y1,\n    y2\n  } = element;\n\n  switch (type) {\n    case \"line\":\n      const on = onLine(x1, y1, x2, y2, x, y);\n      const start = nearPoint(x, y, x1, y1, \"start\");\n      const end = nearPoint(x, y, x2, y2, \"end\");\n      return start || end || on;\n\n    case \"rectangle\":\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\n\n    case \"paintbrush\":\n      const betweenAnyPoint = element.points.some((point, index) => {\n        const nextPoint = element.points[index + 1];\n        if (!nextPoint) return false;\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\n      });\n      return betweenAnyPoint ? \"inside\" : null;\n\n    default:\n      throw new Error(`unrecognised: ${type}`);\n  }\n};\n\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\nconst getElementAtPosition = (x, y, elements) => {\n  return elements.map(element => ({ ...element,\n    position: positionInElement(x, y, element)\n  })).find(element => element.position !== null);\n};\n\nconst adjustElementCoordinates = element => {\n  const {\n    type,\n    x1,\n    y1,\n    x2,\n    y2\n  } = element;\n\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return {\n      x1: minX,\n      y1: minY,\n      x2: maxX,\n      y2: maxY\n    };\n  } else {\n    if (x1 < x2 || x1 === x2 && y1 < y2) {\n      return {\n        x1,\n        y1,\n        x2,\n        y2\n      };\n    } else {\n      return {\n        x1: x2,\n        y1: y2,\n        x2: x1,\n        y2: y1\n      };\n    }\n  }\n};\n\nconst cursorForPosition = position => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n\n    default:\n      return \"move\";\n  }\n};\n\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const {\n    x1,\n    y1,\n    x2,\n    y2\n  } = coordinates;\n\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return {\n        x1: clientX,\n        y1: clientY,\n        x2,\n        y2\n      };\n\n    case \"tr\":\n      return {\n        x1,\n        y1: clientY,\n        x2: clientX,\n        y2\n      };\n\n    case \"bl\":\n      return {\n        x1: clientX,\n        y1,\n        x2,\n        y2: clientY\n      };\n\n    case \"br\":\n    case \"end\":\n      return {\n        x1,\n        y1,\n        x2: clientX,\n        y2: clientY\n      };\n\n    default:\n      return null;\n    // Throws Error\n  }\n}; // --------------------------------------------\n// ----- Undo / Redo Button Functionality -----\n// --------------------------------------------\n\n\nconst useHistory = initialState => {\n  _s();\n\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n\n  const setState = (action, overwrite = false) => {\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\n\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex(prevState => prevState + 1);\n    }\n  };\n\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\n\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\n\n  return [history[index], setState, undo, redo];\n};\n\n_s(useHistory, \"iEmo9NqplUe5E9Qu5A/1RO54SF0=\");\n\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type); // ---------------------------\n// ----------- PAGE ----------\n// ---------------------------\n\n\nconst CanvasPage = () => {\n  _s2();\n\n  // ---------------------------\n  // ---------- Hooks ----------\n  // ---------------------------\n  const [elements, setElements, undo, redo] = useHistory([]);\n  const [locations, setLocations] = useState([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"paintbrush\");\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [selectedColor, setSelectedColor] = useState('#363636');\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    const roughCanvas = rough.canvas(canvas);\n    elements.forEach(element => drawElement(roughCanvas, context, element));\n  }, [elements]);\n\n  const updateElement = (id, x1, y1, x2, y2, type) => {\n    const elementsCopy = [...elements];\n\n    switch (type) {\n      case \"line\":\n      case \"rectangle\":\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\n        break;\n\n      case \"paintbrush\":\n        elementsCopy[id].points = [...elementsCopy[id].points, {\n          x: x2,\n          y: y2\n        }];\n        break;\n\n      default:\n        throw new Error(`unrecognised: ${type}`);\n    }\n\n    setElements(elementsCopy, true);\n  }; // --------------------------------------------\n  // ----- Undo/Redo + Ctrl Z Functionality -----\n  // --------------------------------------------\n\n\n  useEffect(() => {\n    const undoRedoFunction = e => {\n      if ((e.metaKey || e.ctrlKey) && e.key === \"z\") {\n        if (e.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n  }, [undo, redo]); // --------------------------\n  // ----- Event Handlers -----\n  // --------------------------\n\n  const handleMouseDown = e => {\n    const {\n      clientX,\n      clientY\n    } = e;\n\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n\n      if (element) {\n        if (element.type === \"paintbrush\") {\n          const xOffsets = element.points.map(point => clientX - point.x);\n          const yOffsets = element.points.map(point => clientY - point.y);\n          setSelectedElement({ ...element,\n            xOffsets,\n            yOffsets\n          });\n        } else {\n          const offsetX = clientX - element.x1;\n          const offsetY = clientY - element.y1;\n          setSelectedElement({ ...element,\n            offsetX,\n            offsetY\n          });\n        }\n\n        setElements(prevState => prevState);\n\n        if (element.position === \"inside\") {\n          setAction(\"move\");\n        } else {\n          setAction(\"resize\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\n      setElements(prevState => [...prevState, element]);\n      setSelectedElement(element);\n      setAction(\"draw\");\n    }\n  };\n\n  const handleMouseMove = e => {\n    const {\n      clientX,\n      clientY\n    } = e;\n\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      e.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\n    }\n\n    if (action === \"draw\") {\n      const index = elements.length - 1;\n      const {\n        x1,\n        y1\n      } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n    } else if (action === \"move\") {\n      if (selectedElement.type === \"paintbrush\") {\n        const newPoints = selectedElement.points.map((_, index) => ({\n          x: clientX - selectedElement.xOffsets[index],\n          y: clientY - selectedElement.yOffsets[index]\n        }));\n        const elementsCopy = [...elements];\n        elementsCopy[selectedElement.id] = { ...elementsCopy[selectedElement.id],\n          points: newPoints\n        };\n        setElements(elementsCopy, true);\n      } else {\n        const {\n          id,\n          x1,\n          x2,\n          y1,\n          y2,\n          type,\n          offsetX,\n          offsetY\n        } = selectedElement;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const newX1 = clientX - offsetX;\n        const newY1 = clientY - offsetY;\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\n      }\n    } else if (action === \"resize\") {\n      const {\n        id,\n        type,\n        position,\n        ...coordinates\n      } = selectedElement;\n      const {\n        x1,\n        y1,\n        x2,\n        y2\n      } = resizedCoordinates(clientX, clientY, position, coordinates);\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (selectedElement) {\n      const index = selectedElement.id;\n      const {\n        id,\n        type\n      } = elements[index];\n\n      if ((action === \"draw\" || action === \"resize\") && adjustmentRequired(type)) {\n        const {\n          x1,\n          y1,\n          x2,\n          y2\n        } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n\n    setAction(\"none\");\n    setSelectedElement(null);\n  }; // ----------------------------\n  // ---------- Render ----------\n  // ----------------------------\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color\",\n      children: /*#__PURE__*/_jsxDEV(CirclePicker, {\n        colors: ['#a5abe7', '#6fb7da', '#aebc89', '#f1d896', '#e67f6e', '#f384a9', '#7b75da', '#3984a3', '#598b7f', '#f1b376', '#bc5953', '#ed5689', '#363636', '#666', '#818589', '#A9A9A9', '#ccc', '#fff'],\n        color: selectedColor,\n        onChangeComplete: color => setSelectedColor(color.hex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"colorpick\",\n        checked: tool === \"colorpick\",\n        onChange: () => setTool(\"colorpick\"),\n        className: \"tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"colorpick\",\n        className: \"tool__label\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tool__div\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: colorpickicon,\n            alt: \"colorpick icon\",\n            className: \"toolbar__icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"paintbrush\",\n        checked: tool === \"paintbrush\",\n        onChange: () => setTool(\"paintbrush\"),\n        className: \"tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"paintbrush\",\n        className: \"tool__label\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: paintbrush,\n          alt: \"paintbrush icon\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"line\",\n        checked: tool === \"line\",\n        onChange: () => setTool(\"line\"),\n        className: \"tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"line\",\n        className: \"tool__label\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: line,\n          alt: \"line icon\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"rectangle\",\n        checked: tool === \"rectangle\",\n        onChange: () => setTool(\"rectangle\"),\n        className: \"tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"rectangle\",\n        className: \"tool__label\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: square,\n          alt: \"rectangle icon\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        id: \"select\",\n        checked: tool === \"select\",\n        onChange: () => setTool(\"select\"),\n        className: \"tool\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"select\",\n        className: \"tool__label\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: select,\n          alt: \"select icon\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: undo,\n        className: \"click\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: deleteicon,\n          alt: \"clear canvas\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: undo,\n        className: \"click\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: undoIcon,\n          alt: \"undo\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: redo,\n        className: \"click\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: redoIcon,\n          alt: \"redo\",\n          className: \"toolbar__icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"nav\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: home,\n          alt: \"home icon\",\n          className: \"nav__icon click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/about\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: about,\n          alt: \"about icon\",\n          className: \"nav__icon click\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"canvas\",\n      width: window.innerWidth,\n      height: window.innerHeight,\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: \"Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(CanvasPage, \"3s2+Z9G7w3KhUVhPJZaFCHoYwNE=\", false, function () {\n  return [useHistory];\n});\n\n_c = CanvasPage;\nexport default CanvasPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CanvasPage\");","map":{"version":3,"sources":["/Users/alysurr/Documents/Capstone/drawllab/src/pages/CanvasPage/CanvasPage.jsx"],"names":["React","useEffect","useLayoutEffect","useState","Link","rough","tippy","getStroke","CirclePicker","home","about","deleteicon","generator","createElement","id","x1","y1","x2","y2","type","roughElement","line","bowing","strokeWidth","rectangle","points","x","y","Error","getSvgPathFromStroke","stroke","length","d","reduce","acc","x0","y0","i","arr","push","join","drawElement","roughCanvas","context","element","draw","size","thinning","smoothing","streamline","strokeColor","fill","Path2D","nearPoint","name","Math","abs","onLine","maxDistance","a","b","c","offset","distance","positionInElement","on","start","end","topLeft","topRight","bottomLeft","bottomRight","inside","betweenAnyPoint","some","point","index","nextPoint","sqrt","pow","getElementAtPosition","elements","map","position","find","adjustElementCoordinates","minX","min","maxX","max","minY","maxY","cursorForPosition","resizedCoordinates","clientX","clientY","coordinates","useHistory","initialState","setIndex","history","setHistory","setState","action","overwrite","newState","historyCopy","updatedState","slice","prevState","undo","redo","adjustmentRequired","includes","CanvasPage","setElements","locations","setLocations","setAction","tool","setTool","selectedElement","setSelectedElement","selectedColor","setSelectedColor","canvas","document","getElementById","getContext","clearRect","width","height","forEach","updateElement","elementsCopy","undoRedoFunction","e","metaKey","ctrlKey","key","shiftKey","addEventListener","removeEventListener","handleMouseDown","xOffsets","yOffsets","offsetX","offsetY","handleMouseMove","target","style","cursor","newPoints","_","newX1","newY1","handleMouseUp","color","hex","colorpickicon","paintbrush","square","select","undoIcon","redoIcon","window","innerWidth","innerHeight"],"mappings":"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","sourcesContent":["import './CanvasPage.scss';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport rough from 'roughjs/bundled/rough.esm';\nimport tippy from 'tippy.js';\nimport { getStroke } from 'perfect-freehand';\nimport { CirclePicker } from 'react-color';\n\n// -----------------------------\n// ----- icons for toolbar -----\n// -----------------------------\n\nimport paintbrush from '../../assets/images/paintbrush.svg';\nimport line from '../../assets/images/draw-line.svg';\nimport square from '../../assets/images/rectangle.svg';\nimport select from '../../assets/images/select.svg';\nimport home from '../../assets/images/home.png';\nimport about from '../../assets/images/about.png';\nimport deleteicon from '../../assets/images/delete.png';\nimport colorpickicon from '../../assets/images/color-picker.svg';\nimport undoIcon from '../../assets/images/undo.svg'\nimport redoIcon from '../../assets/images/redo.svg'\n\n// ---------------------------------------------\n// ---------- Functionality for Tools ----------\n// ---------------------------------------------\n// ------------- Element Creation --------------\n// ---------------------------------------------\n\nconst generator = rough.generator();\n\nconst createElement = (id, x1, y1, x2, y2, type) => {\n  switch (type) {\n    case \"line\":\n    case \"rectangle\":\n      const roughElement =\n        type === \"line\"\n\t\t\t  ? generator.line(x1, y1, x2, y2, { bowing: 2, strokeWidth: 2.5 })\n        : generator.rectangle(x1, y1, x2 - x1, y2 - y1, { bowing: 2, strokeWidth: 2.5 });\n      return { id, x1, y1, x2, y2, type, roughElement };\n    case \"paintbrush\":\n      return { id, type, points: [{ x: x1, y: y1 }] };\n    default:\n      throw new Error(`unrecognized: ${type}`);\n  }\n};\n\nconst getSvgPathFromStroke = stroke => {\n  if (!stroke.length) return \"\";\n\n  const d = stroke.reduce(\n    (acc, [x0, y0], i, arr) => {\n      const [x1, y1] = arr[(i + 1) % arr.length];\n      acc.push(x0, y0, (x0 + x1) / 2, (y0 + y1) / 2);\n      return acc;\n    },\n    [\"M\", ...stroke[0], \"Q\"]\n  );\n\n  d.push(\"Z\");\n  return d.join(\" \");\n};\n\nconst drawElement = (roughCanvas, context, element) => {\n  switch (element.type) {\n    case \"line\":\n    case \"rectangle\":\n      roughCanvas.draw(element.roughElement);\n      break;\n    case \"paintbrush\":\n      const stroke = getSvgPathFromStroke(getStroke(element.points, {\n\t\t\t\tsize: 8,\n\t\t\t\tthinning: 0.5,\n\t\t\t\tsmoothing: 0.5,\n\t\t\t\tstreamline: 0.5,\n\t\t\t\tstrokeColor: '#666666'\n\t  }));\n      context.fill(new Path2D(stroke));\n      break;\n    default:\n      throw new Error(`unrecognised: ${element.type}`);\n  }\n};\n\n// --------------------------------------------------------\n// ----- Functions to find Position for Select/Resize -----\n// --------------------------------------------------------\n\nconst nearPoint = (x, y, x1, y1, name) => {\n  return Math.abs(x - x1) < 5 && Math.abs(y - y1) < 5 ? name : null;\n};\n\nconst onLine = (x1, y1, x2, y2, x, y, maxDistance = 1) => {\n  const a = { x: x1, y: y1 };\n  const b = { x: x2, y: y2 };\n  const c = { x, y };\n  const offset = distance(a, b) - (distance(a, c) + distance(b, c));\n  return Math.abs(offset) < maxDistance ? \"inside\" : null;\n};\n\nconst positionInElement = (x, y, element) => {\n  const { type, x1, x2, y1, y2 } = element;\n  switch (type) {\n    case \"line\":\n      const on = onLine(x1, y1, x2, y2, x, y);\n      const start = nearPoint(x, y, x1, y1, \"start\");\n      const end = nearPoint(x, y, x2, y2, \"end\");\n      return start || end || on;\n    case \"rectangle\":\n      const topLeft = nearPoint(x, y, x1, y1, \"tl\");\n      const topRight = nearPoint(x, y, x2, y1, \"tr\");\n      const bottomLeft = nearPoint(x, y, x1, y2, \"bl\");\n      const bottomRight = nearPoint(x, y, x2, y2, \"br\");\n      const inside = x >= x1 && x <= x2 && y >= y1 && y <= y2 ? \"inside\" : null;\n      return topLeft || topRight || bottomLeft || bottomRight || inside;\n    case \"paintbrush\":\n      const betweenAnyPoint = element.points.some((point, index) => {\n        const nextPoint = element.points[index + 1];\n        if (!nextPoint) return false;\n        return onLine(point.x, point.y, nextPoint.x, nextPoint.y, x, y, 5) != null;\n      });\n      return betweenAnyPoint ? \"inside\" : null;\n    default:\n      throw new Error(`unrecognised: ${type}`);\n  }\n};\n\nconst distance = (a, b) => Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n\nconst getElementAtPosition = (x, y, elements) => {\n  return elements\n    .map(element => ({ ...element, position: positionInElement(x, y, element) }))\n    .find(element => element.position !== null);\n};\n\nconst adjustElementCoordinates = element => {\n  const { type, x1, y1, x2, y2 } = element;\n  if (type === \"rectangle\") {\n    const minX = Math.min(x1, x2);\n    const maxX = Math.max(x1, x2);\n    const minY = Math.min(y1, y2);\n    const maxY = Math.max(y1, y2);\n    return { x1: minX, y1: minY, x2: maxX, y2: maxY };\n  } else {\n    if (x1 < x2 || (x1 === x2 && y1 < y2)) {\n      return { x1, y1, x2, y2 };\n    } else {\n      return { x1: x2, y1: y2, x2: x1, y2: y1 };\n    }\n  }\n};\n\nconst cursorForPosition = position => {\n  switch (position) {\n    case \"tl\":\n    case \"br\":\n    case \"start\":\n    case \"end\":\n      return \"nwse-resize\";\n    case \"tr\":\n    case \"bl\":\n      return \"nesw-resize\";\n    default:\n      return \"move\";\n  }\n};\n\nconst resizedCoordinates = (clientX, clientY, position, coordinates) => {\n  const { x1, y1, x2, y2 } = coordinates;\n  switch (position) {\n    case \"tl\":\n    case \"start\":\n      return { x1: clientX, y1: clientY, x2, y2 };\n    case \"tr\":\n      return { x1, y1: clientY, x2: clientX, y2 };\n    case \"bl\":\n      return { x1: clientX, y1, x2, y2: clientY };\n    case \"br\":\n    case \"end\":\n      return { x1, y1, x2: clientX, y2: clientY };\n    default:\n      return null; // Throws Error\n  }\n};\n\n// --------------------------------------------\n// ----- Undo / Redo Button Functionality -----\n// --------------------------------------------\n\n\nconst useHistory = initialState => {\n  const [index, setIndex] = useState(0);\n  const [history, setHistory] = useState([initialState]);\n\n  const setState = (action, overwrite = false) => {\n    const newState = typeof action === \"function\" ? action(history[index]) : action;\n    if (overwrite) {\n      const historyCopy = [...history];\n      historyCopy[index] = newState;\n      setHistory(historyCopy);\n    } else {\n      const updatedState = [...history].slice(0, index + 1);\n      setHistory([...updatedState, newState]);\n      setIndex(prevState => prevState + 1);\n    }\n  };\n\n  const undo = () => index > 0 && setIndex(prevState => prevState - 1);\n  const redo = () => index < history.length - 1 && setIndex(prevState => prevState + 1);\n\n  return [history[index], setState, undo, redo];\n};\n\nconst adjustmentRequired = type => [\"line\", \"rectangle\"].includes(type);\n\n// ---------------------------\n// ----------- PAGE ----------\n// ---------------------------\n\nconst CanvasPage = () => {\n\n\t// ---------------------------\n\t// ---------- Hooks ----------\n\t// ---------------------------\n\n\tconst [elements, setElements, undo, redo] = useHistory([]);\n\tconst [locations, setLocations] = useState([]);\n  const [action, setAction] = useState(\"none\");\n  const [tool, setTool] = useState(\"paintbrush\");\n\tconst [selectedElement, setSelectedElement] = useState(null);\n\tconst [selectedColor, setSelectedColor] = useState('#363636');\n\n  useLayoutEffect(() => {\n    const canvas = document.getElementById(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    context.clearRect(0, 0, canvas.width, canvas.height);\n\n    const roughCanvas = rough.canvas(canvas);\n\n    elements.forEach(element => drawElement(roughCanvas, context, element));\n  }, [elements]);\n\n  const updateElement = (id, x1, y1, x2, y2, type) => {\n    const elementsCopy = [...elements];\n\n    switch (type) {\n      case \"line\":\n      case \"rectangle\":\n        elementsCopy[id] = createElement(id, x1, y1, x2, y2, type);\n        break;\n      case \"paintbrush\":\n        elementsCopy[id].points = [...elementsCopy[id].points, { x: x2, y: y2 }];\n        break;\n      default:\n        throw new Error(`unrecognised: ${type}`);\n    }\n\n    setElements(elementsCopy, true);\n  };\n\n\n\t// --------------------------------------------\n\t// ----- Undo/Redo + Ctrl Z Functionality -----\n\t// --------------------------------------------\n\n  useEffect(() => {\n    const undoRedoFunction = e => {\n      if ((e.metaKey || e.ctrlKey) && e.key === \"z\") {\n        if (e.shiftKey) {\n          redo();\n        } else {\n          undo();\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", undoRedoFunction);\n    return () => {\n      document.removeEventListener(\"keydown\", undoRedoFunction);\n    };\n\t}, [undo, redo]);\n\n\t// --------------------------\n\t// ----- Event Handlers -----\n\t// --------------------------\n\n  const handleMouseDown = e => {\n    const { clientX, clientY } = e;\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      if (element) {\n        if (element.type === \"paintbrush\") {\n          const xOffsets = element.points.map(point => clientX - point.x);\n          const yOffsets = element.points.map(point => clientY - point.y);\n          setSelectedElement({ ...element, xOffsets, yOffsets });\n        } else {\n          const offsetX = clientX - element.x1;\n          const offsetY = clientY - element.y1;\n          setSelectedElement({ ...element, offsetX, offsetY });\n        }\n        setElements(prevState => prevState);\n\n        if (element.position === \"inside\") {\n          setAction(\"move\");\n        } else {\n          setAction(\"resize\");\n        }\n      }\n    } else {\n      const id = elements.length;\n      const element = createElement(id, clientX, clientY, clientX, clientY, tool);\n      setElements(prevState => [...prevState, element]);\n      setSelectedElement(element);\n\n      setAction(\"draw\");\n    }\n  };\n\n  const handleMouseMove = e => {\n    const { clientX, clientY } = e;\n\n    if (tool === \"select\") {\n      const element = getElementAtPosition(clientX, clientY, elements);\n      e.target.style.cursor = element ? cursorForPosition(element.position) : \"default\";\n    }\n\n    if (action === \"draw\") {\n      const index = elements.length - 1;\n      const { x1, y1 } = elements[index];\n      updateElement(index, x1, y1, clientX, clientY, tool);\n    } else if (action === \"move\") {\n      if (selectedElement.type === \"paintbrush\") {\n        const newPoints = selectedElement.points.map((_, index) => ({\n          x: clientX - selectedElement.xOffsets[index],\n          y: clientY - selectedElement.yOffsets[index],\n        }));\n        const elementsCopy = [...elements];\n        elementsCopy[selectedElement.id] = {\n          ...elementsCopy[selectedElement.id],\n          points: newPoints,\n        };\n        setElements(elementsCopy, true);\n      } else {\n        const { id, x1, x2, y1, y2, type, offsetX, offsetY } = selectedElement;\n        const width = x2 - x1;\n        const height = y2 - y1;\n        const newX1 = clientX - offsetX;\n        const newY1 = clientY - offsetY;\n        updateElement(id, newX1, newY1, newX1 + width, newY1 + height, type);\n      }\n    } else if (action === \"resize\") {\n      const { id, type, position, ...coordinates } = selectedElement;\n      const { x1, y1, x2, y2 } = resizedCoordinates(clientX, clientY, position, coordinates);\n      updateElement(id, x1, y1, x2, y2, type);\n    }\n  };\n\n  const handleMouseUp = () => {\n    if (selectedElement) {\n      const index = selectedElement.id;\n      const { id, type } = elements[index];\n      if ((action === \"draw\" || action === \"resize\") && adjustmentRequired(type)) {\n        const { x1, y1, x2, y2 } = adjustElementCoordinates(elements[index]);\n        updateElement(id, x1, y1, x2, y2, type);\n      }\n    }\n    setAction(\"none\");\n    setSelectedElement(null);\n  };\n\n\t// ----------------------------\n\t// ---------- Render ----------\n\t// ----------------------------\n\n  return (\n\t  <>\n\t\t\t<div className=\"color\">\n\t\t\t\t<CirclePicker\n\t\t\t\t\tcolors={\n\t\t\t\t\t\t[ '#a5abe7',\n\t\t\t\t\t\t'#6fb7da', \n\t\t\t\t\t\t'#aebc89', \n\t\t\t\t\t\t'#f1d896', \n\t\t\t\t\t\t'#e67f6e', \n\t\t\t\t\t\t'#f384a9', \n\t\t\t\t\t\t'#7b75da', \n\t\t\t\t\t\t'#3984a3', \n\t\t\t\t\t\t'#598b7f', \n\t\t\t\t\t\t'#f1b376', \n\t\t\t\t\t\t'#bc5953', \n\t\t\t\t\t\t'#ed5689', \n\t\t\t\t\t\t'#363636', \n\t\t\t\t\t\t'#666',\n\t\t\t\t\t\t'#818589', \n\t\t\t\t\t\t'#A9A9A9',\n\t\t\t\t\t\t'#ccc', \n\t\t\t\t\t\t'#fff'\n\t\t\t\t\t\t]}\n\t\t\t\t\tcolor={selectedColor}\n\t\t\t\t\tonChangeComplete={color=>setSelectedColor(color.hex)}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t\n\t\t{/* Toolbar Component */}\n\t\t  <div className=\"toolbar\">\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tid=\"colorpick\"\n\t\t\t\tchecked={tool === \"colorpick\"}\n\t\t\t\tonChange={() => setTool(\"colorpick\")}\n\t\t\t\tclassName=\"tool\"\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor=\"colorpick\"\n\t\t\t\tclassName=\"tool__label\"\n\t\t\t>\n\t\t\t<div className=\"tool__div\">\n\t\t\t\t<img src={colorpickicon} alt=\"colorpick icon\" className=\"toolbar__icon\"/>\n\t\t\t</div>\n\t\t\t</label>\n\t\t\t\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tid=\"paintbrush\"\n\t\t\t\tchecked={tool === \"paintbrush\"}\n\t\t\t\tonChange={() => setTool(\"paintbrush\")}\n\t\t\t\tclassName=\"tool\"\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor=\"paintbrush\"\n\t\t\t\tclassName=\"tool__label\"\n\t\t\t>\n\t\t\t\t<img src={paintbrush} alt=\"paintbrush icon\" className=\"toolbar__icon\"/>\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tid=\"line\"\n\t\t\t\tchecked={tool === \"line\"}\n\t\t\t\tonChange={() => setTool(\"line\")}\n\t\t\t\tclassName=\"tool\"\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor=\"line\"\n\t\t\t\tclassName=\"tool__label\"\n\t\t\t>\n\t\t\t\t<img src={line} alt=\"line icon\" className=\"toolbar__icon\"/>\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tid=\"rectangle\"\n\t\t\t\tchecked={tool === \"rectangle\"}\n\t\t\t\tonChange={() => setTool(\"rectangle\")}\n\t\t\t\tclassName=\"tool\"\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor=\"rectangle\"\n\t\t\t\tclassName=\"tool__label\"\n\t\t\t>\n\t\t\t\t<img src={square} alt=\"rectangle icon\" className=\"toolbar__icon\"/>\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\ttype=\"radio\"\n\t\t\t\tid=\"select\"\n\t\t\t\tchecked={tool === \"select\"}\n\t\t\t\tonChange={() => setTool(\"select\")}\n\t\t\t\tclassName=\"tool\"\n\t\t\t/>\n\t\t\t<label\n\t\t\t\thtmlFor=\"select\"\n\t\t\t\tclassName=\"tool__label\"\n\t\t\t>\n\t\t\t\t<img src={select} alt=\"select icon\" className=\"toolbar__icon\"/>\n\t\t\t</label>\n\n\n\n\t\t\t\t{/* Undo/Redo/Clear Buttons should stay at bottom of list */}\n\t\t\t\t\n\t\t\t<div onClick={undo} className=\"click\">\n\t\t\t\t<img src={deleteicon} alt=\"clear canvas\" className=\"toolbar__icon\" />\n\t\t\t</div>\n\t\t\t<div onClick={undo} className=\"click\">\n\t\t\t\t<img src={undoIcon} alt=\"undo\" className=\"toolbar__icon\" />\n\t\t\t</div>\n\t\t\t<div onClick={redo} className=\"click\">\n\t\t\t\t<img src={redoIcon} alt=\"redo\" className=\"toolbar__icon\" />\n\t\t\t</div>\n\n\t\t</div>\n\n\t\t{/* Nav Bar Component */}\n\n\t\t<nav className=\"nav\">\n\t\t\t<Link to=\"/\">\n\t\t\t\t<img src={home} alt=\"home icon\" className=\"nav__icon click\"/>\n\t\t\t</Link>\n\t\t\t<Link to=\"/about\">\n\t\t\t\t<img src={about} alt=\"about icon\" className=\"nav__icon click\"/>\n\t\t\t</Link>\n\t\t</nav>\n\n\t\t{/* Canvas Component */}\n\t\t<canvas\n\t\t\tid=\"canvas\"\n\t\t\twidth={window.innerWidth}\n\t\t\theight={window.innerHeight}\n\t\t\tonMouseDown={handleMouseDown}\n\t\t\tonMouseMove={handleMouseMove}\n\t\t\tonMouseUp={handleMouseUp}\n\t\t>\n\t\t\tCanvas\n\t\t</canvas>\n    </>\n  )\n}\n\nexport default CanvasPage;\n"]},"metadata":{},"sourceType":"module"}